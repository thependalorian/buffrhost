version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: buffrhost-postgres
    environment:
      POSTGRES_DB: buffrhost_dev
      POSTGRES_USER: buffrhost
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    networks:
      - buffrhost-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U buffrhost -d buffrhost_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: buffrhost-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - buffrhost-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: theshandi-backend
    environment:
      - DATABASE_URL=postgresql://theshandi:password@postgres:5432/theshandi_dev
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=dev-secret-key-change-in-production
      - DEBUG=true
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - backend_uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - buffrhost-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: theshandi-frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000/v1
      - NODE_ENV=development
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - buffrhost-network

  # pgAdmin (Database Management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: theshandi-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@theshandi.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - buffrhost-network

  # RedisInsight (Redis Management)
  redisinsight:
    image: redislabs/redisinsight:latest
    container_name: theshandi-redisinsight
    ports:
      - "8001:8001"
    volumes:
      - redisinsight_data:/data
    depends_on:
      - redis
    networks:
      - buffrhost-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  backend_uploads:
    driver: local
  pgadmin_data:
    driver: local
  redisinsight_data:
    driver: local

networks:
  buffrhost-network:
    driver: bridge
